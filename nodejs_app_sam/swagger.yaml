openapi: '3.0.1'
info:
  title: 'tasks-api'
  version: 'v1.0'
paths:
  /:
    get:
      summary: List tasks
      description: Returns list of tasks
      responses:
        200:
          description: '200 response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        500:
          description: '500 response'
          content: {}
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListTasksFunction.Arn}/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: 'when_no_match'
        httpMethod: 'POST'
        contentHandling: 'CONVERT_TO_TEXT'
        type: 'aws_proxy'
    post:
      summary: Create task
      description: Creates a new task
      responses:
        201:
          description: '201 response'
          content: {}
        400:
          description: '400 response'
          content: {}
        500:
          description: '500 response'
          content: {}
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateTaskFunction.Arn}/invocations
        responses:
          default:
            statusCode: '201'
        passthroughBehavior: 'when_no_match'
        httpMethod: 'POST'
        contentHandling: 'CONVERT_TO_TEXT'
        type: 'aws_proxy'
  /{id}:
    get:
      summary: Get task
      description: Returns one specific task
      parameters:
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
      responses:
        200:
          description: '200 response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        404:
          description: '404 response'
          content: {}
        500:
          description: '500 response'
          content: {}
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetTaskFunction.Arn}/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: 'when_no_match'
        httpMethod: 'POST'
        contentHandling: 'CONVERT_TO_TEXT'
        type: 'aws_proxy'
    put:
      summary: Update task
      description: Updates one specific task
      parameters:
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
      responses:
        200:
          description: '200 response'
          content: {}
        400:
          description: '400 response'
          content: {}
        404:
          description: '404 response'
          content: {}
        500:
          description: '500 response'
          content: {}
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateTaskFunction.Arn}/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: 'when_no_match'
        httpMethod: 'POST'
        contentHandling: 'CONVERT_TO_TEXT'
        type: 'aws_proxy'
    delete:
      summary: Delete task
      description: Deletes one specific task
      parameters:
        - name: 'id'
          in: 'path'
          required: true
          schema:
            type: 'string'
      responses:
        200:
          description: '200 response'
          content: {}
        500:
          description: '500 response'
          content: {}
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteTaskFunction.Arn}/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: 'when_no_match'
        httpMethod: 'POST'
        contentHandling: 'CONVERT_TO_TEXT'
        type: 'aws_proxy'
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
